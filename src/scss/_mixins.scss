@mixin container() {
  width: 100%;
  max-width: $max-container-width;
  margin: 0 auto;
  padding: 0 20px;
}

@mixin visuallyHidden() {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  white-space: nowrap;
}

@mixin placeholder {
  &::-webkit-input-placeholder {
    @content;
  }
  &:-moz-placeholder {
    @content;
  }
  &::-moz-placeholder {
    @content;
  }
  &:-ms-input-placeholder {
    @content;
  }
}

@mixin objectFitCover() {
  object-fit: cover;
  object-position: center;
  font-family: 'object-fit: cover; object-position: center;';
}

@mixin objectFitContain() {
  object-fit: contain;
  font-family: 'object-fit: contain;';
}

@mixin breakpoint($class) {
  @if $class == large-desktop {
      @media only screen and (max-width: $large-desktop-width) { @content; }
  } @else if $class == desktop {
      @media only screen and (max-width: $desktop-width) { @content; }
  } @else if $class == laptop {
      @media only screen and (max-width: $laptop-width) { @content; }
  } @else if $class == tablet {
      @media only screen and (max-width: $tablet-width) { @content; }
  } @else if $class == small-tablet {
      @media only screen and (max-width: $small-tablet-width) { @content; }
  } @else if $class == mobile {
      @media only screen and (max-width: $mobile-width) { @content; }
  } @else if $class == small-mobile {
      @media only screen and (max-width: $small-mobile-width) { @content; }
  } @else if $class == supersmall-mobile {
      @media only screen and (max-width: $supersmall-mobile-width) { @content; }
  }
}


@mixin font-smoothing {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}


